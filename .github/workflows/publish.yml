name: Publish

permissions:
  id-token: write

on:
  release:
    types: [published]
  # To manually trigger a rebuild of the API docs if needed
  workflow_dispatch:

jobs:
  publish:
    name: Langium Publish
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: ${{ github.event_name == 'release' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
    - name: Build
      shell: bash
      run: |
        npm ci
        npm run build:clean
        npm run langium:generate:production --workspace=langium
        npm run build
    - name: Test
      if: success() || failure()
      shell: bash
      run: |
        npm run test
    - name: Publish NPM Packages
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # Update the following list when a new npm package is added
      run: |
        npm run publish:latest --provenance --workspace=langium
        npm run publish:latest --provenance --workspace=langium-railroad
        npm run publish:latest --provenance --workspace=langium-cli
        npm run publish:latest --provenance --workspace=langium-sprotty
        npm run publish:latest --provenance --workspace=generator-langium
        npm run publish:latest --provenance --workspace=langium-arithmetics-dsl
        npm run publish:latest --provenance --workspace=langium-domainmodel-dsl
        npm run publish:latest --provenance --workspace=langium-statemachine-dsl
    - name: Publish VSCode Extension
      shell: bash
      # Add this line to the publishing once we have a valid VSCE token available again
      # vsce publish -i langium-vscode-$PACKAGE_VERSION.vsix -p ${{ secrets.VSCE_TOKEN }}
      run: |
        npm install -g @vscode/vsce ovsx
        cd packages/langium-vscode
        PACKAGE_VERSION=`npm pkg get version --workspaces=false | tr -d \"`
        vsce package
        ovsx publish langium-vscode-$PACKAGE_VERSION.vsix -p ${{ secrets.OVSX_TOKEN }}

  docs:
    name: Build and publish API docs
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Build API docs
        run: |
          npm ci
          npm run docs -w langium
      - name: Upload docs artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/langium/docs
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
