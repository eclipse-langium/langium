/* Visit https://aka.ms/tsconfig.json to read more about this file */
{
  "compilerOptions": {
    /* Basic Options */
    // Specify ECMAScript target version
    "target": "ES2020",
    // Specify module code generation
    "module": "NodeNext",
    // Specify library files to be included in the compilation.
    "lib": [
      "ES2020",
      "DOM"
    ],
    // Generates corresponding '.d.ts' file.
    "declaration": true,
    // Generates a sourcemap for each corresponding '.d.ts' file.
    "declarationMap": true,
    // Generates corresponding '.map' file.
    "sourceMap": true,
    // Enable project compilation
    "composite": true,

    /* Strict Type-Checking Options */
    // Enable all strict type-checking options.
    "strict": true,
    // Enable strict checking of property initialization in classes.
    "strictPropertyInitialization": false,

    /* Additional Checks */
    // Report errors on unused locals.
    "noUnusedLocals": true,
    // Report error when not all code paths in function return a value.
    "noImplicitReturns": true,
    // Report error when a method is overridden without the `override` keyword.
    "noImplicitOverride": true,

    /* Module Resolution Options */
    // Specify module resolution strategy
    "moduleResolution": "nodenext",
    // Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
    "allowSyntheticDefaultImports": true,
    // Allows importing modules with a .json extension, which is a common practice in node projects.
    "resolveJsonModule": true,
    // Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'.
    "esModuleInterop": true,

    /* Advanced Options */
    // Disallow inconsistently-cased references to the same file.
    "forceConsistentCasingInFileNames": true,

    /* Experimental Options */
    // Enables experimental support for ES7 decorators.
    "experimentalDecorators": true,
    // Skip type checking of declaration files.
    "skipLibCheck": true,
    // This setting controls how TypeScript determines whether a file is a script or a module.
    "moduleDetection": "force"
  },
  "include": [
     "**/src/**/*",
     "**/test/**/*"
  ],
  "exclude": [
     "**/lib/**/*",
     "**/out/**/*",
     "**/node_modules/**/*"
  ]
}
